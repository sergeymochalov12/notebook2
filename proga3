package ru.geekbrains.api.lesson4.test2;

import ru.geekbrains.api.lesson4.test.Notebook;

import java.util.*;

class Notebok { // создаем объект Notebok
    private String model;
    private int ram;
    private int hdd;
    private String os;
    private String color;
    private double diag;
    private int price;

    public Notebok(String model, int ram, int hdd, String os, String color, double diag, int price) { // конструктор
        this.model = model;
        this.ram = ram;
        this.hdd = hdd;
        this.os = os;
        this.color = color;
        this.diag = diag;
        this.price = price;

    }

    // Геттеры для полей

    public String getModel() {
        return model;
    }

    public int getRam() {
        return ram;
    }

    public int getHdd() {
        return hdd;
    }

    public String getOs() {
        return os;
    }

    public String getColor() {
        return color;
    }

    public int getPrice() {
        return price;
    }

    public double getDiag() {
        return diag;
    }

    @Override
    public String toString() {
        return String.format
                ("Производитель: %s \n " +
                        "объем оперативной памяти: %d Гб \n " +
                        "объем накопителя % d Гб \n " +
                        "ОС %s \n " +
                        "Диагональ %1f \n " +
                        "Цена, руб.  %d \n", this.model, this.ram, this.hdd, this.os, this.diag, this.price);
    }
}

class App {
    public static void main(String[] args) {
        Set<Notebok> noteboks = new HashSet<>();// todo сделать чтоб ноуты добалены были + сделать выод
        // public Notebok(String model, int ram, int hdd, String os, String color, double diag, int price) 
        noteboks.add(new Notebok("Модель1", 8, 512, "Windows", "Черный"));
        noteboks.add(new Notebok("Модель2", 16, 1024, "Linux", "Серебряный"));
        noteboks.add(new Notebok("Lenovo", 8, 500, "Windows 11", "Черный", 15.6, 40000);

        Notebook notebook2 = new Notebook("Acer", 4, 250, "Intel", "Windows 10", 11, 35000);
        Notebook notebook3 = new Notebook("Honor", 16, 512, "AMD", "Ubuntu", 16.1, 55000);
        Notebook notebook4 = new Notebook("Apple", 32, 1024, "M1", "MacOs", 13.3, 100000);
        Notebook notebook5 = new Notebook("HP", 16, 1024, "Intel", "nonOS", 15.6, 40000);
        Notebook notebook6 = new Notebook("XiomiRedmiBook", 16, 2048, "AMD", "Windows 11", 17, 70000);


        // Добавьте еще ноутбуки

        Scanner scanner = new Scanner(System.in);
        Map<Integer, Object> filter = new HashMap<>();

        System.out.println("Введите цифру, соответствующую критерию фильтрации:");
        System.out.println("1 - ОЗУ");
        System.out.println("2 - Объем ЖД");
        System.out.println("3 - Операционная система");
        System.out.println("4 - Цвет");

        int selectUser = scanner.nextInt();
        filter.put(selectUser, null);

        if (selectUser == 1 || selectUser == 2) {
            System.out.println("Введите минимальное значение:");
            int minVolume = scanner.nextInt();
            filter.put(selectUser, minVolume);
        } else if (selectUser == 3 || selectUser == 4) {
            System.out.println("Введите значение:");
            String volume = scanner.next();
            filter.put(selectUser, volume);
        }

        filterAndPrint(noteboks, filter);
    }

    private static void filterAndPrint(Set<Notebok> noteboks, Map<Integer, Object> filter) {

        for (Notebok element : noteboks) {
            boolean yes = true;

            for (Map.Entry<Integer, Object> entry : filter.entrySet()) {

                int criteriy = entry.getKey();
                Object entryValue = entry.getValue();

                switch (criteriy) {
                    case 1:
                        int volRam = (int) entryValue;
                        if (element.getRam() < volRam) {
                            yes = false;
                        }
                        break;
                    case 2:
                        int volHdd = (int) entryValue;
                        if (element.getHdd() < volHdd) {
                            yes = false;
                        }
                        break;
                    case 3:
                        String volOS = (String) entryValue;
                        if (!element.getOs().equals(volOS)) {
                            yes = false;
                        }
                        break;
                    case 4:
                        String volColor = (String) entryValue;
                        if (!element.getColor().equals(volColor)) {
                            yes = false;
                        }
                        break;
                }
            }

            if (yes) {
                System.out.println(element);
            }
        }
    }
}

